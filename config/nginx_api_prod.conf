upstream backend_production {
    ip_hash;
    server server1.api.feedient.com:8000;
    keepalive 512;
}

server {
    listen 80;
    listen 443 ssl;

    server_name api.feedient.com;
    client_max_body_size 10M;

    # Rewrite to https
    if ($ssl_protocol = "") {
        rewrite ^ https://$server_name$request_uri? permanent;
    }

	location / {
        # Set the headers so that can get the IP of the user instead of our nginx servers.
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;

        # Skip out-of-service error (helps for zero-dowtime deploys)
        proxy_next_upstream error timeout http_500 http_502 http_503 http_504;

        proxy_pass http://backend_production;

        # Enable WS support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # prevents 502 bad gateway error
        proxy_buffers 8 32k;
        proxy_buffer_size 64k;
		
		# Prevents upstream timeout
		proxy_read_timeout 150;
    }

    # prevents 502 bad gateway error
    large_client_header_buffers 8 32k;
	
	location /echo {
		# prevents 502 bad gateway error
		proxy_buffers 8 32k;
		proxy_buffer_size 64k;

		proxy_pass http://backend_production;
		proxy_redirect off;

		# Enable WS support
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		
		# Prevents upstream timeout
		proxy_read_timeout 150;
	}

    # GZIP
    gzip            on;
    gzip_min_length 1000;
    gzip_proxied    expired no-cache no-store private auth;
    gzip_types      text/css application/json application/javascript application/x-javascript text/javascript text/xml application/xml $
    gzip_disable    "MSIE [1-6]\.(?!.*SV1)";

    # SSL
    # ssl on; # Commented out because we need to accept port 80
    ssl_certificate /etc/nginx/ssl/ssl-unified.crt;
    ssl_certificate_key /etc/nginx/ssl/ssl.key;
    
    # Set SSL protocols, Remove SSLv3 which has the POODLE vulnerability
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
}
